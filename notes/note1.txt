MARK----  https://drive.google.com/file/d/1Q-4LTByZTVJMBAkalgJkruravky_-ciF/view?usp=sharing
LEI---- https://drive.google.com/file/d/12NB4JHmYBK3omXCF64Yh9jDKbjniw-99/view?usp=sharing

/*
    May 4 picture box
        1.flappyBird
        2.ground
        3.pipeTop
        4.pipeBottom

    tas may 3 label
        1.scoreText -- eto yung naka display habang nag lalaro
        2.txtEndScore -- nag didisplay lang kapag natalo na
        3.txtGameOver -- same nag didisplay lang kapag natalo na
 */


using System.Diagnostics.Metrics;

namespace Flappy_Bird
{
    public partial class Form1 : Form
    {
        int pipeSpeed = 8;
        int gravity = 2;
        int birdVelocity = 0;
        bool isFalling = true;
        int score = 0;
        Random rnd = new Random();
        bool passedPipe = false;
        int counter = 0;

        public Form1()
        {
            InitializeComponent();
            //pwesto ng ibon sa start ng game
            flappyBird.Top = this.ClientSize.Height / 4;
            flappyBird.Left = this.ClientSize.Width / 4;
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            score = 0;
        }

        private void gameTimerEvent(object sender, EventArgs e)
        {
            flappyBird.Top += birdVelocity;

            //Pipes movement
            pipeTop.Left -= pipeSpeed;
            pipeBottom.Left -= pipeSpeed;

            if (pipeBottom.Left + pipeBottom.Width < 0)
            {
                pipeBottom.Left = ClientSize.Width + rnd.Next(50, 100);
                passedPipe = false;
            }
            if (pipeTop.Left + pipeTop.Width < 0)
            {
                pipeTop.Left = ClientSize.Width + rnd.Next(50, 100);
                passedPipe = false;
            }


            //Bird logic kapag hindi na pindot
            if (isFalling)
            {
                birdVelocity += gravity;
            }


            //collisions sa pipes, from top and ground
            if (flappyBird.Bounds.IntersectsWith(pipeTop.Bounds) || flappyBird.Bounds.IntersectsWith(pipeBottom.Bounds) || flappyBird.Bounds.IntersectsWith(ground.Bounds) || flappyBird.Top < 0)
            {
                birdVelocity = 0;
                scoreText.Hide();
                gameTimer.Stop();
            }

            //score logic every top pipe na malalampasan
            if (!passedPipe && flappyBird.Left > pipeTop.Left + pipeTop.Width)
            {
                score += 1;
                scoreText.Text = "Score: " + score.ToString();
                passedPipe = true;
            }
            //score logic every bottom pipe na malalampasan
            if (!passedPipe && flappyBird.Left > pipeBottom.Left + pipeBottom.Width)
            {
                score += 1;
                scoreText.Text = "Score: " + score.ToString();
                passedPipe = true;
            }

            //papabilisin yung game every 10 score
            if (score % 10 == 0 && score > 1 && score != counter)
            {
                pipeSpeed++;
                counter = score;
            }  

            Refresh();
        }

        //pindot
        private void gamekeyisdown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Space)
            {
                isFalling = false;
                birdVelocity = -15;
            }
        }

        //
        private void gamekeyisup(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Space)
            {
                isFalling = true;
            }
        }
    }
}

