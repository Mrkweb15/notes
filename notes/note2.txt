namespace floating
{
    public partial class Form1 : Form
    {
        Random rnd = new Random();

        private int objWidth, objX, objY, volX, volY;
        private const int objHeight = 50;

        private int pbWidth, pbX, pbY, pbVolX, pbVolY;
        private const int pbHeight = 50;

        private int pb2X, pb2Y, pb2VolX;
        private const int pb2Height = 50;
        private const int pb2Width = 50;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            volX = rnd.Next(1, 4);
            volY = rnd.Next(1, 4);
            pbVolX = rnd.Next(1, 4);
            pbVolY = rnd.Next(1, 4);
            pb2VolX = 3;

            objX = rnd.Next(0, ClientSize.Width - label1.Width);
            objY = rnd.Next(0, ClientSize.Height - objHeight);
            objWidth = label1.Width;

            pbX = rnd.Next(0, ClientSize.Width - pictureBox1.Width);
            pbY = rnd.Next(0, ClientSize.Height - pbHeight);
            pbWidth = pictureBox1.Width;

            pb2X = 0;

            this.SetStyle(
                ControlStyles.AllPaintingInWmPaint |
                ControlStyles.UserPaint |
                ControlStyles.DoubleBuffer,
                true
            );

            timer1.Start();
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            label1.Left = objX;
            label1.Top = objY;

            objX += volX;
            if (objX < 0 || objX + objWidth > ClientSize.Width)
            {
                volX = -volX;
                label1.ForeColor = Color.FromArgb(rnd.Next(255), rnd.Next(255), rnd.Next(255));
            }

            objY += volY;
            if (objY < 0 || objY + objHeight > ClientSize.Height)
            {
                volY = -volY;
                label1.ForeColor = Color.FromArgb(rnd.Next(255), rnd.Next(255), rnd.Next(255));
            }

            pictureBox1.Left = pbX;
            pictureBox1.Top = pbY;

            pbX += pbVolX;
            if (pbX < 0 || pbX + pbWidth > ClientSize.Width)
            {
                pbVolX = -pbVolX;
            }

            pbY += pbVolY;
            if (pbY < 0 || pbY + pbHeight > ClientSize.Height)
            {
                pbVolY = -pbVolY;
            }

            pictureBox2.Left = pb2X;

            pb2X += pb2VolX;
            if (pb2X > ClientSize.Width)
            {
                pb2X = -pb2Width;
            }

            Rectangle labelRect = new Rectangle(objX, objY, objWidth, objHeight);
            Rectangle pbRect = new Rectangle(pbX, pbY, pbWidth, pbHeight);
            Rectangle pb2Rect = new Rectangle(pb2X, pb2Y, pb2Width, pb2Height);

            // Collision with pictureBox1
            if (labelRect.IntersectsWith(pbRect))
            {
                int tempX = volX;
                int tempY = volY;
                volX = pbVolX;
                volY = pbVolY;
                pbVolX = tempX;
                pbVolY = tempY;

                label1.ForeColor = Color.FromArgb(rnd.Next(255), rnd.Next(255), rnd.Next(255));
            }

            // Collision with pictureBox2 (horizontal wall)
            if (labelRect.IntersectsWith(pb2Rect))
            {
                volX = -volX;
            }

            // Make pictureBox1 also bounce from pictureBox2
            if (pbRect.IntersectsWith(pb2Rect))
            {
                pbVolX = -pbVolX;
            }


            Refresh();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }
    }
}
